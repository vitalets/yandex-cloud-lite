// source: yandex/cloud/mdb/sqlserver/v1/config/sqlserver2016sp2.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var yandex_cloud_validation_pb = require('../../../../../../yandex/cloud/validation_pb.js');
goog.object.extend(proto, yandex_cloud_validation_pb);
goog.exportSymbol('proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.displayName = 'proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.displayName = 'proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.displayName = 'proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.displayName = 'proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxDegreeOfParallelism: (f = msg.getMaxDegreeOfParallelism()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    costThresholdForParallelism: (f = msg.getCostThresholdForParallelism()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    auditLevel: (f = msg.getAuditLevel()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    fillFactorPercent: (f = msg.getFillFactorPercent()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    optimizeForAdHocWorkloads: (f = msg.getOptimizeForAdHocWorkloads()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std;
  return proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxDegreeOfParallelism(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setCostThresholdForParallelism(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setAuditLevel(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setFillFactorPercent(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setOptimizeForAdHocWorkloads(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxDegreeOfParallelism();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getCostThresholdForParallelism();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getAuditLevel();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getFillFactorPercent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getOptimizeForAdHocWorkloads();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int64Value max_degree_of_parallelism = 1;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.getMaxDegreeOfParallelism = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 1));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.setMaxDegreeOfParallelism = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.clearMaxDegreeOfParallelism = function() {
  return this.setMaxDegreeOfParallelism(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.hasMaxDegreeOfParallelism = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Int64Value cost_threshold_for_parallelism = 2;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.getCostThresholdForParallelism = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 2));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.setCostThresholdForParallelism = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.clearCostThresholdForParallelism = function() {
  return this.setCostThresholdForParallelism(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.hasCostThresholdForParallelism = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Int64Value audit_level = 3;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.getAuditLevel = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 3));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.setAuditLevel = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.clearAuditLevel = function() {
  return this.setAuditLevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.hasAuditLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Int64Value fill_factor_percent = 4;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.getFillFactorPercent = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 4));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.setFillFactorPercent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.clearFillFactorPercent = function() {
  return this.setFillFactorPercent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.hasFillFactorPercent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.BoolValue optimize_for_ad_hoc_workloads = 5;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.getOptimizeForAdHocWorkloads = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 5));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.setOptimizeForAdHocWorkloads = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.clearOptimizeForAdHocWorkloads = function() {
  return this.setOptimizeForAdHocWorkloads(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.prototype.hasOptimizeForAdHocWorkloads = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.toObject = function(includeInstance, msg) {
  var f, obj = {
    effectiveConfig: (f = msg.getEffectiveConfig()) && proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.toObject(includeInstance, f),
    userConfig: (f = msg.getUserConfig()) && proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.toObject(includeInstance, f),
    defaultConfig: (f = msg.getDefaultConfig()) && proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std;
  return proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std;
      reader.readMessage(value,proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.deserializeBinaryFromReader);
      msg.setEffectiveConfig(value);
      break;
    case 2:
      var value = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std;
      reader.readMessage(value,proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.deserializeBinaryFromReader);
      msg.setUserConfig(value);
      break;
    case 3:
      var value = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std;
      reader.readMessage(value,proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.deserializeBinaryFromReader);
      msg.setDefaultConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEffectiveConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.serializeBinaryToWriter
    );
  }
  f = message.getUserConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.serializeBinaryToWriter
    );
  }
  f = message.getDefaultConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std.serializeBinaryToWriter
    );
  }
};


/**
 * optional SQLServerConfig2016sp2std effective_config = 1;
 * @return {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.getEffectiveConfig = function() {
  return /** @type{?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std, 1));
};


/**
 * @param {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.setEffectiveConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.clearEffectiveConfig = function() {
  return this.setEffectiveConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.hasEffectiveConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SQLServerConfig2016sp2std user_config = 2;
 * @return {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.getUserConfig = function() {
  return /** @type{?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std, 2));
};


/**
 * @param {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.setUserConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.clearUserConfig = function() {
  return this.setUserConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.hasUserConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SQLServerConfig2016sp2std default_config = 3;
 * @return {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.getDefaultConfig = function() {
  return /** @type{?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std, 3));
};


/**
 * @param {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2std|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.setDefaultConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.clearDefaultConfig = function() {
  return this.setDefaultConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2std.prototype.hasDefaultConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxDegreeOfParallelism: (f = msg.getMaxDegreeOfParallelism()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    costThresholdForParallelism: (f = msg.getCostThresholdForParallelism()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    auditLevel: (f = msg.getAuditLevel()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    fillFactorPercent: (f = msg.getFillFactorPercent()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    optimizeForAdHocWorkloads: (f = msg.getOptimizeForAdHocWorkloads()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent;
  return proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxDegreeOfParallelism(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setCostThresholdForParallelism(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setAuditLevel(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setFillFactorPercent(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setOptimizeForAdHocWorkloads(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxDegreeOfParallelism();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getCostThresholdForParallelism();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getAuditLevel();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getFillFactorPercent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getOptimizeForAdHocWorkloads();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int64Value max_degree_of_parallelism = 1;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.getMaxDegreeOfParallelism = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 1));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.setMaxDegreeOfParallelism = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.clearMaxDegreeOfParallelism = function() {
  return this.setMaxDegreeOfParallelism(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.hasMaxDegreeOfParallelism = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Int64Value cost_threshold_for_parallelism = 2;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.getCostThresholdForParallelism = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 2));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.setCostThresholdForParallelism = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.clearCostThresholdForParallelism = function() {
  return this.setCostThresholdForParallelism(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.hasCostThresholdForParallelism = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Int64Value audit_level = 3;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.getAuditLevel = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 3));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.setAuditLevel = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.clearAuditLevel = function() {
  return this.setAuditLevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.hasAuditLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Int64Value fill_factor_percent = 4;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.getFillFactorPercent = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 4));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.setFillFactorPercent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.clearFillFactorPercent = function() {
  return this.setFillFactorPercent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.hasFillFactorPercent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.BoolValue optimize_for_ad_hoc_workloads = 5;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.getOptimizeForAdHocWorkloads = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 5));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.setOptimizeForAdHocWorkloads = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.clearOptimizeForAdHocWorkloads = function() {
  return this.setOptimizeForAdHocWorkloads(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.prototype.hasOptimizeForAdHocWorkloads = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.toObject = function(includeInstance, msg) {
  var f, obj = {
    effectiveConfig: (f = msg.getEffectiveConfig()) && proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.toObject(includeInstance, f),
    userConfig: (f = msg.getUserConfig()) && proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.toObject(includeInstance, f),
    defaultConfig: (f = msg.getDefaultConfig()) && proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent;
  return proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent;
      reader.readMessage(value,proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.deserializeBinaryFromReader);
      msg.setEffectiveConfig(value);
      break;
    case 2:
      var value = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent;
      reader.readMessage(value,proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.deserializeBinaryFromReader);
      msg.setUserConfig(value);
      break;
    case 3:
      var value = new proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent;
      reader.readMessage(value,proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.deserializeBinaryFromReader);
      msg.setDefaultConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEffectiveConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.serializeBinaryToWriter
    );
  }
  f = message.getUserConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.serializeBinaryToWriter
    );
  }
  f = message.getDefaultConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent.serializeBinaryToWriter
    );
  }
};


/**
 * optional SQLServerConfig2016sp2ent effective_config = 1;
 * @return {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.getEffectiveConfig = function() {
  return /** @type{?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent, 1));
};


/**
 * @param {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.setEffectiveConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.clearEffectiveConfig = function() {
  return this.setEffectiveConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.hasEffectiveConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SQLServerConfig2016sp2ent user_config = 2;
 * @return {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.getUserConfig = function() {
  return /** @type{?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent, 2));
};


/**
 * @param {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.setUserConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.clearUserConfig = function() {
  return this.setUserConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.hasUserConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SQLServerConfig2016sp2ent default_config = 3;
 * @return {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.getDefaultConfig = function() {
  return /** @type{?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent, 3));
};


/**
 * @param {?proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfig2016sp2ent|undefined} value
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent} returns this
*/
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.setDefaultConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent} returns this
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.clearDefaultConfig = function() {
  return this.setDefaultConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.sqlserver.v1.config.SQLServerConfigSet2016sp2ent.prototype.hasDefaultConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.yandex.cloud.mdb.sqlserver.v1.config);
