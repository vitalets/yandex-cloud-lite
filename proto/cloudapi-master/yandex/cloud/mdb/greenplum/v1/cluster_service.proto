syntax = "proto3";

package yandex.cloud.mdb.greenplum.v1;

import "google/api/annotations.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

import "yandex/cloud/mdb/greenplum/v1/cluster.proto";
import "yandex/cloud/mdb/greenplum/v1/config.proto";
import "yandex/cloud/mdb/greenplum/v1/host.proto";


option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/greenplum/v1;greenplum";
option java_outer_classname = "GPCS";
option java_package = "yandex.cloud.api.mdb.greenplum.v1";

// A set of methods for managing Greenplum clusters.
service ClusterService {
  // Returns the specified Greenplum cluster.
  //
  // To get the list of available Greenplum clusters, make a [List] request.
  rpc Get (GetClusterRequest) returns (Cluster) {
    option (google.api.http) = { get: "/mdb/managed-greenplum/v1/clusters/{cluster_id}" };
  }

  // Retrieves a list of Greenplum clusters that belong
  // to the specified folder.
  rpc List (ListClustersRequest) returns (ListClustersResponse) {
    option (google.api.http) = { get: "/mdb/managed-greenplum/v1/clusters" };
  }

  // Creates a Greenplum cluster in the specified folder.
  rpc Create (CreateClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/mdb/managed-greenplum/v1/clusters" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateClusterMetadata"
      response: "Cluster"
    };
  }


  // Deletes the specified Greenplum cluster.
  rpc Delete (DeleteClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/mdb/managed-greenplum/v1/clusters/{cluster_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteClusterMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Starts the specified Greenplum cluster.
  rpc Start (StartClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/mdb/managed-greenplum/v1/clusters/{cluster_id}:start" };
    option (yandex.cloud.api.operation) = {
      metadata: "StartClusterMetadata"
      response: "Cluster"
    };
  }

  // Stops the specified Greenplum cluster.
  rpc Stop (StopClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/mdb/managed-greenplum/v1/clusters/{cluster_id}:stop" };
    option (yandex.cloud.api.operation) = {
      metadata: "StopClusterMetadata"
      response: "Cluster"
    };
  }

  // Retrieves the list of Operation resources for the specified cluster.
  rpc ListOperations (ListClusterOperationsRequest) returns (ListClusterOperationsResponse) {
    option (google.api.http) = { get: "/mdb/managed-greenplum/v1/clusters/{cluster_id}/operations" };
  }

  // Retrieves a list of master hosts for the specified cluster.
  rpc ListMasterHosts (ListClusterHostsRequest) returns (ListClusterHostsResponse) {
    option (google.api.http) = { get: "/mdb/managed-greenplum/v1/clusters/{cluster_id}/master-hosts" };
  }

  // Retrieves a list of segment hosts for the specified cluster.
  rpc ListSegmentHosts (ListClusterHostsRequest) returns (ListClusterHostsResponse) {
    option (google.api.http) = { get: "/mdb/managed-greenplum/v1/clusters/{cluster_id}/segment-hosts" };
  }
}

message GetClusterRequest {
  // ID of the Greenplum Cluster resource to return.
  // To get the cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message ListClustersRequest {
  // ID of the folder to list Greenplum clusters in.
  // To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClustersResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the [ListClustersResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently you can only use filtering with the [Cluster.name] field.
  // 2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
  // 3. The value. Must be 1-63 characters long and match the regular expression `^[a-zA-Z0-9_-]+$`.
  string filter = 4 [(length) = "<=1000"];
}

message ListClustersResponse {
  // List of Greenplum Cluster resources.
  repeated Cluster clusters = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value
  // for the [ListClustersRequest.page_token] parameter in the next list request. Each subsequent
  // list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateClusterRequest {
  // ID of the folder to create the Greenplum cluster in.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // Name of the Greenplum cluster. The name must be unique within the folder.
  string name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

  // Description of the Greenplum cluster.
  string description = 3 [(length) = "<=256"];

  // Custom labels for the Greenplum cluster as `key:value` pairs. Maximum 64 per resource.
  // For example, "project": "mvp" or "source": "dictionary".
  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  // Deployment environment of the Greenplum cluster.
  Cluster.Environment environment = 5 [(required) = true];

  // Green plum cluster config
  GreenplumConfig config = 6;

  // Configuration of the Greenplum master subcluster.
  MasterSubclusterConfigSpec master_config = 7;

  // Configuration of the Greenplum segment subcluster.
  SegmentSubclusterConfigSpec segment_config = 8;

  // Number of hosts of the master subcluster
  int64 master_host_count = 9;

  // Number of segments in the host
  int64 segment_in_host = 10;

  // Number of hosts of the segment subcluster
  int64 segment_host_count = 11;

  // Owner user name
  string user_name = 12;

  // Owner user password
  string user_password = 13 [(required) = true, (length) = "8-128"];

  // ID of the network to create the cluster in.
  string network_id = 14 [(required) = true, (length) = "<=50"];

  // User security groups
  repeated string security_group_ids = 15;

  // Deletion Protection inhibits deletion of the cluster
  bool deletion_protection = 16;

  // Host groups to place VMs of cluster on.
  repeated string host_group_ids = 17;
}

message CreateClusterMetadata {
  // ID of the Greenplum cluster that is being created.
  string cluster_id = 1;
}

message DeleteClusterRequest {
  // ID of the Greenplum cluster to delete.
  // To get the Greenplum cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteClusterMetadata {
  // ID of the Greenplum cluster that is being deleted.
  string cluster_id = 1;
}

message StartClusterRequest {
  // ID of the Greenplum cluster to start.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message StartClusterMetadata {
  // ID of the Greenplum cluster being started.
  string cluster_id = 1;
}

message StopClusterRequest {
  // ID of the Greenplum cluster to stop.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message StopClusterMetadata {
  // ID of the Greenplum cluster being stopped.
  string cluster_id = 1;
}

message ListClusterOperationsRequest {
  // ID of the Greenplum Cluster resource to list operations for.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token.  To get the next page of results, set [page_token] to the [ListClusterOperationsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterOperationsResponse {
  // List of Operation resources for the specified Greenplum cluster.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClusterOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message ListClusterHostsRequest {
  // ID of the Greenplum cluster.
  // To get the Greenplum cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClusterHostsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token.  To get the next page of results, set [page_token] to the [ListClusterHostsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterHostsResponse {
  // Requested list of hosts for the cluster.
  repeated Host hosts = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClusterHostsRequest.page_size], use the [next_page_token] as the value
  // for the [ListClusterHostsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}


// Configuration of master subcluster
message MasterSubclusterConfigSpec {
  // Resources allocated to Greenplum master subcluster hosts.
  Resources resources = 1;

  // Configuration settings of a Greenplum master server.
  GreenplumMasterConfig config = 2;
}

// Configuration of segmet subcluster
message SegmentSubclusterConfigSpec {
  // Resources allocated to Greenplum segment subcluster hosts.
  Resources resources = 1; 

  // Configuration settings of a Greenplum segment server.
  GreenplumSegmentConfig config = 2;
}
