// source: yandex/cloud/mdb/clickhouse/v1/config/clickhouse.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var yandex_cloud_validation_pb = require('../../../../../../yandex/cloud/validation_pb.js');
goog.object.extend(proto, yandex_cloud_validation_pb);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.LifetimeCase', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.SourceCase', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq', null, global);
goog.exportSymbol('proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.repeatedFields_, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.repeatedFields_, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.repeatedFields_, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.repeatedFields_, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.repeatedFields_, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.repeatedFields_, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.repeatedFields_, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.displayName = 'proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.repeatedFields_ = [3,4,5,36];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    logLevel: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mergeTree: (f = msg.getMergeTree()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.toObject(includeInstance, f),
    compressionList: jspb.Message.toObjectList(msg.getCompressionList(),
    proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.toObject, includeInstance),
    dictionariesList: jspb.Message.toObjectList(msg.getDictionariesList(),
    proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.toObject, includeInstance),
    graphiteRollupList: jspb.Message.toObjectList(msg.getGraphiteRollupList(),
    proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.toObject, includeInstance),
    kafka: (f = msg.getKafka()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.toObject(includeInstance, f),
    kafkaTopicsList: jspb.Message.toObjectList(msg.getKafkaTopicsList(),
    proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.toObject, includeInstance),
    rabbitmq: (f = msg.getRabbitmq()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.toObject(includeInstance, f),
    maxConnections: (f = msg.getMaxConnections()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    maxConcurrentQueries: (f = msg.getMaxConcurrentQueries()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    keepAliveTimeout: (f = msg.getKeepAliveTimeout()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    uncompressedCacheSize: (f = msg.getUncompressedCacheSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    markCacheSize: (f = msg.getMarkCacheSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    maxTableSizeToDrop: (f = msg.getMaxTableSizeToDrop()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    maxPartitionSizeToDrop: (f = msg.getMaxPartitionSizeToDrop()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    builtinDictionariesReloadInterval: (f = msg.getBuiltinDictionariesReloadInterval()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    timezone: jspb.Message.getFieldWithDefault(msg, 14, ""),
    geobaseUri: jspb.Message.getFieldWithDefault(msg, 15, ""),
    queryLogRetentionSize: (f = msg.getQueryLogRetentionSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    queryLogRetentionTime: (f = msg.getQueryLogRetentionTime()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    queryThreadLogEnabled: (f = msg.getQueryThreadLogEnabled()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    queryThreadLogRetentionSize: (f = msg.getQueryThreadLogRetentionSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    queryThreadLogRetentionTime: (f = msg.getQueryThreadLogRetentionTime()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    partLogRetentionSize: (f = msg.getPartLogRetentionSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    partLogRetentionTime: (f = msg.getPartLogRetentionTime()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    metricLogEnabled: (f = msg.getMetricLogEnabled()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    metricLogRetentionSize: (f = msg.getMetricLogRetentionSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    metricLogRetentionTime: (f = msg.getMetricLogRetentionTime()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    traceLogEnabled: (f = msg.getTraceLogEnabled()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    traceLogRetentionSize: (f = msg.getTraceLogRetentionSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    traceLogRetentionTime: (f = msg.getTraceLogRetentionTime()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    textLogEnabled: (f = msg.getTextLogEnabled()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    textLogRetentionSize: (f = msg.getTextLogRetentionSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    textLogRetentionTime: (f = msg.getTextLogRetentionTime()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    textLogLevel: jspb.Message.getFieldWithDefault(msg, 32, 0),
    backgroundPoolSize: (f = msg.getBackgroundPoolSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    backgroundSchedulePoolSize: (f = msg.getBackgroundSchedulePoolSize()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel} */ (reader.readEnum());
      msg.setLogLevel(value);
      break;
    case 2:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.deserializeBinaryFromReader);
      msg.setMergeTree(value);
      break;
    case 3:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.deserializeBinaryFromReader);
      msg.addCompression(value);
      break;
    case 4:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.deserializeBinaryFromReader);
      msg.addDictionaries(value);
      break;
    case 5:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.deserializeBinaryFromReader);
      msg.addGraphiteRollup(value);
      break;
    case 35:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 36:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.deserializeBinaryFromReader);
      msg.addKafkaTopics(value);
      break;
    case 37:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.deserializeBinaryFromReader);
      msg.setRabbitmq(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxConnections(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxConcurrentQueries(value);
      break;
    case 8:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setKeepAliveTimeout(value);
      break;
    case 9:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setUncompressedCacheSize(value);
      break;
    case 10:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMarkCacheSize(value);
      break;
    case 11:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxTableSizeToDrop(value);
      break;
    case 13:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxPartitionSizeToDrop(value);
      break;
    case 12:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setBuiltinDictionariesReloadInterval(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeobaseUri(value);
      break;
    case 16:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setQueryLogRetentionSize(value);
      break;
    case 17:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setQueryLogRetentionTime(value);
      break;
    case 18:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setQueryThreadLogEnabled(value);
      break;
    case 19:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setQueryThreadLogRetentionSize(value);
      break;
    case 20:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setQueryThreadLogRetentionTime(value);
      break;
    case 21:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setPartLogRetentionSize(value);
      break;
    case 22:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setPartLogRetentionTime(value);
      break;
    case 23:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setMetricLogEnabled(value);
      break;
    case 24:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMetricLogRetentionSize(value);
      break;
    case 25:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMetricLogRetentionTime(value);
      break;
    case 26:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setTraceLogEnabled(value);
      break;
    case 27:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setTraceLogRetentionSize(value);
      break;
    case 28:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setTraceLogRetentionTime(value);
      break;
    case 29:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setTextLogEnabled(value);
      break;
    case 30:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setTextLogRetentionSize(value);
      break;
    case 31:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setTextLogRetentionTime(value);
      break;
    case 32:
      var value = /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel} */ (reader.readEnum());
      msg.setTextLogLevel(value);
      break;
    case 33:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setBackgroundPoolSize(value);
      break;
    case 34:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setBackgroundSchedulePoolSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMergeTree();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.serializeBinaryToWriter
    );
  }
  f = message.getCompressionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.serializeBinaryToWriter
    );
  }
  f = message.getDictionariesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.serializeBinaryToWriter
    );
  }
  f = message.getGraphiteRollupList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.serializeBinaryToWriter
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.serializeBinaryToWriter
    );
  }
  f = message.getKafkaTopicsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      36,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.serializeBinaryToWriter
    );
  }
  f = message.getRabbitmq();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.serializeBinaryToWriter
    );
  }
  f = message.getMaxConnections();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxConcurrentQueries();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getKeepAliveTimeout();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getUncompressedCacheSize();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMarkCacheSize();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxTableSizeToDrop();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxPartitionSizeToDrop();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getBuiltinDictionariesReloadInterval();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getGeobaseUri();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getQueryLogRetentionSize();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getQueryLogRetentionTime();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getQueryThreadLogEnabled();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getQueryThreadLogRetentionSize();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getQueryThreadLogRetentionTime();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getPartLogRetentionSize();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getPartLogRetentionTime();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMetricLogEnabled();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getMetricLogRetentionSize();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMetricLogRetentionTime();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getTraceLogEnabled();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getTraceLogRetentionSize();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getTraceLogRetentionTime();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getTextLogEnabled();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getTextLogRetentionSize();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getTextLogRetentionTime();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getTextLogLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      32,
      f
    );
  }
  f = message.getBackgroundPoolSize();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getBackgroundSchedulePoolSize();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel = {
  LOG_LEVEL_UNSPECIFIED: 0,
  TRACE: 1,
  DEBUG: 2,
  INFORMATION: 3,
  WARNING: 4,
  ERROR: 5
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.toObject = function(includeInstance, msg) {
  var f, obj = {
    replicatedDeduplicationWindow: (f = msg.getReplicatedDeduplicationWindow()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    replicatedDeduplicationWindowSeconds: (f = msg.getReplicatedDeduplicationWindowSeconds()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    partsToDelayInsert: (f = msg.getPartsToDelayInsert()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    partsToThrowInsert: (f = msg.getPartsToThrowInsert()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    maxReplicatedMergesInQueue: (f = msg.getMaxReplicatedMergesInQueue()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge: (f = msg.getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    maxBytesToMergeAtMinSpaceInPool: (f = msg.getMaxBytesToMergeAtMinSpaceInPool()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    maxBytesToMergeAtMaxSpaceInPool: (f = msg.getMaxBytesToMergeAtMaxSpaceInPool()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setReplicatedDeduplicationWindow(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setReplicatedDeduplicationWindowSeconds(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setPartsToDelayInsert(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setPartsToThrowInsert(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxReplicatedMergesInQueue(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxBytesToMergeAtMinSpaceInPool(value);
      break;
    case 8:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setMaxBytesToMergeAtMaxSpaceInPool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReplicatedDeduplicationWindow();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getReplicatedDeduplicationWindowSeconds();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getPartsToDelayInsert();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getPartsToThrowInsert();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxReplicatedMergesInQueue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxBytesToMergeAtMinSpaceInPool();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxBytesToMergeAtMaxSpaceInPool();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int64Value replicated_deduplication_window = 1;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.getReplicatedDeduplicationWindow = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 1));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.setReplicatedDeduplicationWindow = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.clearReplicatedDeduplicationWindow = function() {
  return this.setReplicatedDeduplicationWindow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.hasReplicatedDeduplicationWindow = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.getReplicatedDeduplicationWindowSeconds = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 2));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.setReplicatedDeduplicationWindowSeconds = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.clearReplicatedDeduplicationWindowSeconds = function() {
  return this.setReplicatedDeduplicationWindowSeconds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.hasReplicatedDeduplicationWindowSeconds = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Int64Value parts_to_delay_insert = 3;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.getPartsToDelayInsert = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 3));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.setPartsToDelayInsert = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.clearPartsToDelayInsert = function() {
  return this.setPartsToDelayInsert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.hasPartsToDelayInsert = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Int64Value parts_to_throw_insert = 4;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.getPartsToThrowInsert = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 4));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.setPartsToThrowInsert = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.clearPartsToThrowInsert = function() {
  return this.setPartsToThrowInsert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.hasPartsToThrowInsert = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Int64Value max_replicated_merges_in_queue = 5;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.getMaxReplicatedMergesInQueue = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 5));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.setMaxReplicatedMergesInQueue = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.clearMaxReplicatedMergesInQueue = function() {
  return this.setMaxReplicatedMergesInQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.hasMaxReplicatedMergesInQueue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 6));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.setNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.clearNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge = function() {
  return this.setNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.hasNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.getMaxBytesToMergeAtMinSpaceInPool = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 7));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.setMaxBytesToMergeAtMinSpaceInPool = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.clearMaxBytesToMergeAtMinSpaceInPool = function() {
  return this.setMaxBytesToMergeAtMinSpaceInPool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.hasMaxBytesToMergeAtMinSpaceInPool = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.getMaxBytesToMergeAtMaxSpaceInPool = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 8));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.setMaxBytesToMergeAtMaxSpaceInPool = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.clearMaxBytesToMergeAtMaxSpaceInPool = function() {
  return this.setMaxBytesToMergeAtMaxSpaceInPool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree.prototype.hasMaxBytesToMergeAtMaxSpaceInPool = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.toObject = function(includeInstance, msg) {
  var f, obj = {
    securityProtocol: jspb.Message.getFieldWithDefault(msg, 1, 0),
    saslMechanism: jspb.Message.getFieldWithDefault(msg, 2, 0),
    saslUsername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    saslPassword: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol} */ (reader.readEnum());
      msg.setSecurityProtocol(value);
      break;
    case 2:
      var value = /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism} */ (reader.readEnum());
      msg.setSaslMechanism(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaslUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaslPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurityProtocol();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSaslMechanism();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSaslUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSaslPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol = {
  SECURITY_PROTOCOL_UNSPECIFIED: 0,
  SECURITY_PROTOCOL_PLAINTEXT: 1,
  SECURITY_PROTOCOL_SSL: 2,
  SECURITY_PROTOCOL_SASL_PLAINTEXT: 3,
  SECURITY_PROTOCOL_SASL_SSL: 4
};

/**
 * @enum {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism = {
  SASL_MECHANISM_UNSPECIFIED: 0,
  SASL_MECHANISM_GSSAPI: 1,
  SASL_MECHANISM_PLAIN: 2,
  SASL_MECHANISM_SCRAM_SHA_256: 3,
  SASL_MECHANISM_SCRAM_SHA_512: 4
};

/**
 * optional SecurityProtocol security_protocol = 1;
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.getSecurityProtocol = function() {
  return /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.setSecurityProtocol = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional SaslMechanism sasl_mechanism = 2;
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.getSaslMechanism = function() {
  return /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.setSaslMechanism = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string sasl_username = 3;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.getSaslUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.setSaslUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string sasl_password = 4;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.getSaslPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.prototype.setSaslPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    settings: (f = msg.getSettings()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Kafka settings = 2;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.prototype.getSettings = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka, 2));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minPartSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    minPartSizeRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinPartSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinPartSizeRatio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMinPartSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMinPartSizeRatio();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method = {
  METHOD_UNSPECIFIED: 0,
  LZ4: 1,
  ZSTD: 2
};

/**
 * optional Method method = 1;
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.prototype.getMethod = function() {
  return /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 min_part_size = 2;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.prototype.getMinPartSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.prototype.setMinPartSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double min_part_size_ratio = 3;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.prototype.getMinPartSizeRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.prototype.setMinPartSizeRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_ = [[4,5],[6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.LifetimeCase = {
  LIFETIME_NOT_SET: 0,
  FIXED_LIFETIME: 4,
  LIFETIME_RANGE: 5
};

/**
 * @return {proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.LifetimeCase}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getLifetimeCase = function() {
  return /** @type {proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.LifetimeCase} */(jspb.Message.computeOneofCase(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.SourceCase = {
  SOURCE_NOT_SET: 0,
  HTTP_SOURCE: 6,
  MYSQL_SOURCE: 7,
  CLICKHOUSE_SOURCE: 8,
  MONGODB_SOURCE: 9,
  POSTGRESQL_SOURCE: 10
};

/**
 * @return {proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.SourceCase}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getSourceCase = function() {
  return /** @type {proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.SourceCase} */(jspb.Message.computeOneofCase(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    structure: (f = msg.getStructure()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.toObject(includeInstance, f),
    layout: (f = msg.getLayout()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.toObject(includeInstance, f),
    fixedLifetime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    lifetimeRange: (f = msg.getLifetimeRange()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.toObject(includeInstance, f),
    httpSource: (f = msg.getHttpSource()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.toObject(includeInstance, f),
    mysqlSource: (f = msg.getMysqlSource()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.toObject(includeInstance, f),
    clickhouseSource: (f = msg.getClickhouseSource()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.toObject(includeInstance, f),
    mongodbSource: (f = msg.getMongodbSource()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.toObject(includeInstance, f),
    postgresqlSource: (f = msg.getPostgresqlSource()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.deserializeBinaryFromReader);
      msg.setStructure(value);
      break;
    case 3:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFixedLifetime(value);
      break;
    case 5:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.deserializeBinaryFromReader);
      msg.setLifetimeRange(value);
      break;
    case 6:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.deserializeBinaryFromReader);
      msg.setHttpSource(value);
      break;
    case 7:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.deserializeBinaryFromReader);
      msg.setMysqlSource(value);
      break;
    case 8:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.deserializeBinaryFromReader);
      msg.setClickhouseSource(value);
      break;
    case 9:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.deserializeBinaryFromReader);
      msg.setMongodbSource(value);
      break;
    case 10:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.deserializeBinaryFromReader);
      msg.setPostgresqlSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStructure();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.serializeBinaryToWriter
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getLifetimeRange();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.serializeBinaryToWriter
    );
  }
  f = message.getHttpSource();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.serializeBinaryToWriter
    );
  }
  f = message.getMysqlSource();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.serializeBinaryToWriter
    );
  }
  f = message.getClickhouseSource();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.serializeBinaryToWriter
    );
  }
  f = message.getMongodbSource();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.serializeBinaryToWriter
    );
  }
  f = message.getPostgresqlSource();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    format: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFormat();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string format = 2;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.prototype.getFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource.prototype.setFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    table: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    user: jspb.Message.getFieldWithDefault(msg, 4, ""),
    password: jspb.Message.getFieldWithDefault(msg, 5, ""),
    replicasList: jspb.Message.toObjectList(msg.getReplicasList(),
    proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.toObject, includeInstance),
    where: jspb.Message.getFieldWithDefault(msg, 7, ""),
    invalidateQuery: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.deserializeBinaryFromReader);
      msg.addReplicas(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhere(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvalidateQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReplicasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.serializeBinaryToWriter
    );
  }
  f = message.getWhere();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInvalidateQuery();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: jspb.Message.getFieldWithDefault(msg, 1, ""),
    priority: jspb.Message.getFieldWithDefault(msg, 2, 0),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    user: jspb.Message.getFieldWithDefault(msg, 4, ""),
    password: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPriority(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 priority = 2;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 port = 3;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string user = 4;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.setTable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 port = 3;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string user = 4;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Replica replicas = 6;
 * @return {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.getReplicasList = function() {
  return /** @type{!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica, 6));
};


/**
 * @param {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.setReplicasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.addReplicas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.clearReplicasList = function() {
  return this.setReplicasList([]);
};


/**
 * optional string where = 7;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.getWhere = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.setWhere = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string invalidate_query = 8;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.getInvalidateQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.prototype.setInvalidateQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    table: jspb.Message.getFieldWithDefault(msg, 2, ""),
    host: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0),
    user: jspb.Message.getFieldWithDefault(msg, 5, ""),
    password: jspb.Message.getFieldWithDefault(msg, 6, ""),
    where: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPort(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhere(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWhere();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.setTable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string host = 3;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 port = 4;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string user = 5;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string password = 6;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string where = 7;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.getWhere = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource.prototype.setWhere = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    host: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0),
    user: jspb.Message.getFieldWithDefault(msg, 5, ""),
    password: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPort(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string host = 3;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 port = 4;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string user = 5;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string password = 6;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    table: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hostsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    port: jspb.Message.getFieldWithDefault(msg, 4, 0),
    user: jspb.Message.getFieldWithDefault(msg, 5, ""),
    password: jspb.Message.getFieldWithDefault(msg, 6, ""),
    invalidateQuery: jspb.Message.getFieldWithDefault(msg, 7, ""),
    sslMode: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addHosts(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPort(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvalidateQuery(value);
      break;
    case 8:
      var value = /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode} */ (reader.readEnum());
      msg.setSslMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHostsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInvalidateQuery();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSslMode();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode = {
  SSL_MODE_UNSPECIFIED: 0,
  DISABLE: 1,
  ALLOW: 2,
  PREFER: 3,
  VERIFY_CA: 4,
  VERIFY_FULL: 5
};

/**
 * optional string db = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.setTable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string hosts = 3;
 * @return {!Array<string>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.getHostsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.setHostsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.addHosts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.clearHostsList = function() {
  return this.setHostsList([]);
};


/**
 * optional int64 port = 4;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string user = 5;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string password = 6;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string invalidate_query = 7;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.getInvalidateQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.setInvalidateQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional SslMode ssl_mode = 8;
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.getSslMode = function() {
  return /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.prototype.setSslMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.toObject(includeInstance, f),
    key: (f = msg.getKey()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.toObject(includeInstance, f),
    rangeMin: (f = msg.getRangeMin()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.toObject(includeInstance, f),
    rangeMax: (f = msg.getRangeMax()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.toObject(includeInstance, f),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 4:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.deserializeBinaryFromReader);
      msg.setRangeMin(value);
      break;
    case 5:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.deserializeBinaryFromReader);
      msg.setRangeMax(value);
      break;
    case 2:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.serializeBinaryToWriter
    );
  }
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.serializeBinaryToWriter
    );
  }
  f = message.getRangeMin();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getRangeMax();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nullValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expression: jspb.Message.getFieldWithDefault(msg, 4, ""),
    hierarchical: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    injective: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNullValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpression(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHierarchical(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInjective(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNullValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpression();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHierarchical();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getInjective();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string null_value = 3;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.getNullValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.setNullValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string expression = 4;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.getExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.setExpression = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool hierarchical = 5;
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.getHierarchical = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.setHierarchical = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool injective = 6;
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.getInjective = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.prototype.setInjective = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.toObject = function(includeInstance, msg) {
  var f, obj = {
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Attribute attributes = 1;
 * @return {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute, 1));
};


/**
 * @param {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional Id id = 1;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.getId = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id, 1));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Key key = 3;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.getKey = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key, 3));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.hasKey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Attribute range_min = 4;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.getRangeMin = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute, 4));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.setRangeMin = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.clearRangeMin = function() {
  return this.setRangeMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.hasRangeMin = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Attribute range_max = 5;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.getRangeMax = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute, 5));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.setRangeMax = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.clearRangeMax = function() {
  return this.setRangeMax(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.hasRangeMax = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Attribute attributes = 2;
 * @return {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute, 2));
};


/**
 * @param {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sizeInCells: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSizeInCells(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSizeInCells();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type = {
  TYPE_UNSPECIFIED: 0,
  FLAT: 1,
  HASHED: 2,
  COMPLEX_KEY_HASHED: 3,
  RANGE_HASHED: 4,
  CACHE: 5,
  COMPLEX_KEY_CACHE: 6
};

/**
 * optional Type type = 1;
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.prototype.getType = function() {
  return /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 size_in_cells = 2;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.prototype.getSizeInCells = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.prototype.setSizeInCells = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.toObject = function(includeInstance, msg) {
  var f, obj = {
    min: jspb.Message.getFieldWithDefault(msg, 1, 0),
    max: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMin();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 min = 1;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.prototype.setMin = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 max = 2;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range.prototype.setMax = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Structure structure = 2;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getStructure = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure, 2));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setStructure = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.clearStructure = function() {
  return this.setStructure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.hasStructure = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Layout layout = 3;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getLayout = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout, 3));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setLayout = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 fixed_lifetime = 4;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getFixedLifetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setFixedLifetime = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.clearFixedLifetime = function() {
  return jspb.Message.setOneofField(this, 4, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.hasFixedLifetime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Range lifetime_range = 5;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getLifetimeRange = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range, 5));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setLifetimeRange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.clearLifetimeRange = function() {
  return this.setLifetimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.hasLifetimeRange = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional HttpSource http_source = 6;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getHttpSource = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource, 6));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setHttpSource = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.clearHttpSource = function() {
  return this.setHttpSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.hasHttpSource = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MysqlSource mysql_source = 7;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getMysqlSource = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource, 7));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setMysqlSource = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.clearMysqlSource = function() {
  return this.setMysqlSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.hasMysqlSource = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ClickhouseSource clickhouse_source = 8;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getClickhouseSource = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource, 8));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setClickhouseSource = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.clearClickhouseSource = function() {
  return this.setClickhouseSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.hasClickhouseSource = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional MongodbSource mongodb_source = 9;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getMongodbSource = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource, 9));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setMongodbSource = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.clearMongodbSource = function() {
  return this.setMongodbSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.hasMongodbSource = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PostgresqlSource postgresql_source = 10;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.getPostgresqlSource = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource, 10));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.setPostgresqlSource = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.clearPostgresqlSource = function() {
  return this.setPostgresqlSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.prototype.hasPostgresqlSource = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    patternsList: jspb.Message.toObjectList(msg.getPatternsList(),
    proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.deserializeBinaryFromReader);
      msg.addPatterns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPatternsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.toObject = function(includeInstance, msg) {
  var f, obj = {
    regexp: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_function: jspb.Message.getFieldWithDefault(msg, 2, ""),
    retentionList: jspb.Message.toObjectList(msg.getRetentionList(),
    proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegexp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunction(value);
      break;
    case 3:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.deserializeBinaryFromReader);
      msg.addRetention(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegexp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFunction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRetentionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.toObject = function(includeInstance, msg) {
  var f, obj = {
    age: jspb.Message.getFieldWithDefault(msg, 1, 0),
    precision: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAge(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrecision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAge();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPrecision();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 age = 1;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.prototype.setAge = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 precision = 2;
 * @return {number}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.prototype.getPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention.prototype.setPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string regexp = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.getRegexp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.setRegexp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string function = 2;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.getFunction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.setFunction = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Retention retention = 3;
 * @return {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.getRetentionList = function() {
  return /** @type{!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention, 3));
};


/**
 * @param {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.setRetentionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.addRetention = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.prototype.clearRetentionList = function() {
  return this.setRetentionList([]);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Pattern patterns = 2;
 * @return {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.prototype.getPatternsList = function() {
  return /** @type{!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern, 2));
};


/**
 * @param {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.prototype.setPatternsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.prototype.addPatterns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.prototype.clearPatternsList = function() {
  return this.setPatternsList([]);
};


/**
 * optional LogLevel log_level = 1;
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getLogLevel = function() {
  return /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setLogLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional MergeTree merge_tree = 2;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getMergeTree = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree, 2));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setMergeTree = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearMergeTree = function() {
  return this.setMergeTree(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasMergeTree = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Compression compression = 3;
 * @return {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getCompressionList = function() {
  return /** @type{!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression, 3));
};


/**
 * @param {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setCompressionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.addCompression = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearCompressionList = function() {
  return this.setCompressionList([]);
};


/**
 * repeated ExternalDictionary dictionaries = 4;
 * @return {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getDictionariesList = function() {
  return /** @type{!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary, 4));
};


/**
 * @param {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setDictionariesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.addDictionaries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearDictionariesList = function() {
  return this.setDictionariesList([]);
};


/**
 * repeated GraphiteRollup graphite_rollup = 5;
 * @return {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getGraphiteRollupList = function() {
  return /** @type{!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup, 5));
};


/**
 * @param {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setGraphiteRollupList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.addGraphiteRollup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearGraphiteRollupList = function() {
  return this.setGraphiteRollupList([]);
};


/**
 * optional Kafka kafka = 35;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getKafka = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka, 35));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setKafka = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * repeated KafkaTopic kafka_topics = 36;
 * @return {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic>}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getKafkaTopicsList = function() {
  return /** @type{!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic, 36));
};


/**
 * @param {!Array<!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic>} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setKafkaTopicsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 36, value);
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.addKafkaTopics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 36, opt_value, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearKafkaTopicsList = function() {
  return this.setKafkaTopicsList([]);
};


/**
 * optional Rabbitmq rabbitmq = 37;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getRabbitmq = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq, 37));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setRabbitmq = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearRabbitmq = function() {
  return this.setRabbitmq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasRabbitmq = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional google.protobuf.Int64Value max_connections = 6;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getMaxConnections = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 6));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setMaxConnections = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearMaxConnections = function() {
  return this.setMaxConnections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasMaxConnections = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Int64Value max_concurrent_queries = 7;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getMaxConcurrentQueries = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 7));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setMaxConcurrentQueries = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearMaxConcurrentQueries = function() {
  return this.setMaxConcurrentQueries(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasMaxConcurrentQueries = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Int64Value keep_alive_timeout = 8;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getKeepAliveTimeout = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 8));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setKeepAliveTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearKeepAliveTimeout = function() {
  return this.setKeepAliveTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasKeepAliveTimeout = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Int64Value uncompressed_cache_size = 9;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getUncompressedCacheSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 9));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setUncompressedCacheSize = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearUncompressedCacheSize = function() {
  return this.setUncompressedCacheSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasUncompressedCacheSize = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Int64Value mark_cache_size = 10;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getMarkCacheSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 10));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setMarkCacheSize = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearMarkCacheSize = function() {
  return this.setMarkCacheSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasMarkCacheSize = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Int64Value max_table_size_to_drop = 11;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getMaxTableSizeToDrop = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 11));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setMaxTableSizeToDrop = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearMaxTableSizeToDrop = function() {
  return this.setMaxTableSizeToDrop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasMaxTableSizeToDrop = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Int64Value max_partition_size_to_drop = 13;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getMaxPartitionSizeToDrop = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 13));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setMaxPartitionSizeToDrop = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearMaxPartitionSizeToDrop = function() {
  return this.setMaxPartitionSizeToDrop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasMaxPartitionSizeToDrop = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getBuiltinDictionariesReloadInterval = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 12));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setBuiltinDictionariesReloadInterval = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearBuiltinDictionariesReloadInterval = function() {
  return this.setBuiltinDictionariesReloadInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasBuiltinDictionariesReloadInterval = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string timezone = 14;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string geobase_uri = 15;
 * @return {string}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getGeobaseUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setGeobaseUri = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional google.protobuf.Int64Value query_log_retention_size = 16;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getQueryLogRetentionSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 16));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setQueryLogRetentionSize = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearQueryLogRetentionSize = function() {
  return this.setQueryLogRetentionSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasQueryLogRetentionSize = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional google.protobuf.Int64Value query_log_retention_time = 17;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getQueryLogRetentionTime = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 17));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setQueryLogRetentionTime = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearQueryLogRetentionTime = function() {
  return this.setQueryLogRetentionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasQueryLogRetentionTime = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional google.protobuf.BoolValue query_thread_log_enabled = 18;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getQueryThreadLogEnabled = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 18));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setQueryThreadLogEnabled = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearQueryThreadLogEnabled = function() {
  return this.setQueryThreadLogEnabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasQueryThreadLogEnabled = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional google.protobuf.Int64Value query_thread_log_retention_size = 19;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getQueryThreadLogRetentionSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 19));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setQueryThreadLogRetentionSize = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearQueryThreadLogRetentionSize = function() {
  return this.setQueryThreadLogRetentionSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasQueryThreadLogRetentionSize = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional google.protobuf.Int64Value query_thread_log_retention_time = 20;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getQueryThreadLogRetentionTime = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 20));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setQueryThreadLogRetentionTime = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearQueryThreadLogRetentionTime = function() {
  return this.setQueryThreadLogRetentionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasQueryThreadLogRetentionTime = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional google.protobuf.Int64Value part_log_retention_size = 21;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getPartLogRetentionSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 21));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setPartLogRetentionSize = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearPartLogRetentionSize = function() {
  return this.setPartLogRetentionSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasPartLogRetentionSize = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional google.protobuf.Int64Value part_log_retention_time = 22;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getPartLogRetentionTime = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 22));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setPartLogRetentionTime = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearPartLogRetentionTime = function() {
  return this.setPartLogRetentionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasPartLogRetentionTime = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional google.protobuf.BoolValue metric_log_enabled = 23;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getMetricLogEnabled = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 23));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setMetricLogEnabled = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearMetricLogEnabled = function() {
  return this.setMetricLogEnabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasMetricLogEnabled = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional google.protobuf.Int64Value metric_log_retention_size = 24;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getMetricLogRetentionSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 24));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setMetricLogRetentionSize = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearMetricLogRetentionSize = function() {
  return this.setMetricLogRetentionSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasMetricLogRetentionSize = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional google.protobuf.Int64Value metric_log_retention_time = 25;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getMetricLogRetentionTime = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 25));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setMetricLogRetentionTime = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearMetricLogRetentionTime = function() {
  return this.setMetricLogRetentionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasMetricLogRetentionTime = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional google.protobuf.BoolValue trace_log_enabled = 26;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getTraceLogEnabled = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 26));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setTraceLogEnabled = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearTraceLogEnabled = function() {
  return this.setTraceLogEnabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasTraceLogEnabled = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional google.protobuf.Int64Value trace_log_retention_size = 27;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getTraceLogRetentionSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 27));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setTraceLogRetentionSize = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearTraceLogRetentionSize = function() {
  return this.setTraceLogRetentionSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasTraceLogRetentionSize = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional google.protobuf.Int64Value trace_log_retention_time = 28;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getTraceLogRetentionTime = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 28));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setTraceLogRetentionTime = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearTraceLogRetentionTime = function() {
  return this.setTraceLogRetentionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasTraceLogRetentionTime = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional google.protobuf.BoolValue text_log_enabled = 29;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getTextLogEnabled = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 29));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setTextLogEnabled = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearTextLogEnabled = function() {
  return this.setTextLogEnabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasTextLogEnabled = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional google.protobuf.Int64Value text_log_retention_size = 30;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getTextLogRetentionSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 30));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setTextLogRetentionSize = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearTextLogRetentionSize = function() {
  return this.setTextLogRetentionSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasTextLogRetentionSize = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional google.protobuf.Int64Value text_log_retention_time = 31;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getTextLogRetentionTime = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 31));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setTextLogRetentionTime = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearTextLogRetentionTime = function() {
  return this.setTextLogRetentionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasTextLogRetentionTime = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional LogLevel text_log_level = 32;
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getTextLogLevel = function() {
  return /** @type {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setTextLogLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 32, value);
};


/**
 * optional google.protobuf.Int64Value background_pool_size = 33;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getBackgroundPoolSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 33));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setBackgroundPoolSize = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearBackgroundPoolSize = function() {
  return this.setBackgroundPoolSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasBackgroundPoolSize = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional google.protobuf.Int64Value background_schedule_pool_size = 34;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.getBackgroundSchedulePoolSize = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 34));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.setBackgroundSchedulePoolSize = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.clearBackgroundSchedulePoolSize = function() {
  return this.setBackgroundSchedulePoolSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.prototype.hasBackgroundSchedulePoolSize = function() {
  return jspb.Message.getField(this, 34) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.toObject = function(opt_includeInstance) {
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    effectiveConfig: (f = msg.getEffectiveConfig()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.toObject(includeInstance, f),
    userConfig: (f = msg.getUserConfig()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.toObject(includeInstance, f),
    defaultConfig: (f = msg.getDefaultConfig()) && proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet;
  return proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.deserializeBinaryFromReader);
      msg.setEffectiveConfig(value);
      break;
    case 2:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.deserializeBinaryFromReader);
      msg.setUserConfig(value);
      break;
    case 3:
      var value = new proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig;
      reader.readMessage(value,proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.deserializeBinaryFromReader);
      msg.setDefaultConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEffectiveConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.serializeBinaryToWriter
    );
  }
  f = message.getUserConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.serializeBinaryToWriter
    );
  }
  f = message.getDefaultConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClickhouseConfig effective_config = 1;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.getEffectiveConfig = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig, 1));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.setEffectiveConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.clearEffectiveConfig = function() {
  return this.setEffectiveConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.hasEffectiveConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ClickhouseConfig user_config = 2;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.getUserConfig = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig, 2));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.setUserConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.clearUserConfig = function() {
  return this.setUserConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.hasUserConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ClickhouseConfig default_config = 3;
 * @return {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.getDefaultConfig = function() {
  return /** @type{?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig} */ (
    jspb.Message.getWrapperField(this, proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig, 3));
};


/**
 * @param {?proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig|undefined} value
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet} returns this
*/
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.setDefaultConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet} returns this
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.clearDefaultConfig = function() {
  return this.setDefaultConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet.prototype.hasDefaultConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.yandex.cloud.mdb.clickhouse.v1.config);
